/*
 * Influx API Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.influxdata.client.domain;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.influxdata.client.domain.BucketLinks;
import org.influxdata.client.domain.BucketRetentionRules;
import org.influxdata.client.domain.Labels;

/**
 * Bucket
 */
@javax.annotation.Generated(value = "org.influxdata.codegen.InfluxJavaGenerator", date = "2019-03-21T13:31:19.701+01:00[Europe/Prague]")
public class Bucket {
  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private BucketLinks links = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = null;

  public static final String SERIALIZED_NAME_ORGANIZATION_I_D = "organizationID";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_I_D)
  private String organizationID = null;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization = null;

  public static final String SERIALIZED_NAME_RP = "rp";
  @SerializedName(SERIALIZED_NAME_RP)
  private String rp = null;

  public static final String SERIALIZED_NAME_RETENTION_RULES = "retentionRules";
  @SerializedName(SERIALIZED_NAME_RETENTION_RULES)
  private List<BucketRetentionRules> retentionRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Labels labels = null;

  public Bucket links(BucketLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public BucketLinks getLinks() {
    return links;
  }

  public void setLinks(BucketLinks links) {
    this.links = links;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public Bucket name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Bucket organizationID(String organizationID) {
    this.organizationID = organizationID;
    return this;
  }

   /**
   * Get organizationID
   * @return organizationID
  **/
  @ApiModelProperty(value = "")
  public String getOrganizationID() {
    return organizationID;
  }

  public void setOrganizationID(String organizationID) {
    this.organizationID = organizationID;
  }

  public Bucket organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(value = "")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public Bucket rp(String rp) {
    this.rp = rp;
    return this;
  }

   /**
   * Get rp
   * @return rp
  **/
  @ApiModelProperty(value = "")
  public String getRp() {
    return rp;
  }

  public void setRp(String rp) {
    this.rp = rp;
  }

  public Bucket retentionRules(List<BucketRetentionRules> retentionRules) {
    this.retentionRules = retentionRules;
    return this;
  }

  public Bucket addRetentionRulesItem(BucketRetentionRules retentionRulesItem) {
    this.retentionRules.add(retentionRulesItem);
    return this;
  }

   /**
   * rules to expire or retain data.  No rules means data never expires.
   * @return retentionRules
  **/
  @ApiModelProperty(required = true, value = "rules to expire or retain data.  No rules means data never expires.")
  public List<BucketRetentionRules> getRetentionRules() {
    return retentionRules;
  }

  public void setRetentionRules(List<BucketRetentionRules> retentionRules) {
    this.retentionRules = retentionRules;
  }

  public Bucket labels(Labels labels) {
    this.labels = labels;
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @ApiModelProperty(value = "")
  public Labels getLabels() {
    return labels;
  }

  public void setLabels(Labels labels) {
    this.labels = labels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bucket bucket = (Bucket) o;
    return Objects.equals(this.links, bucket.links) &&
        Objects.equals(this.id, bucket.id) &&
        Objects.equals(this.name, bucket.name) &&
        Objects.equals(this.organizationID, bucket.organizationID) &&
        Objects.equals(this.organization, bucket.organization) &&
        Objects.equals(this.rp, bucket.rp) &&
        Objects.equals(this.retentionRules, bucket.retentionRules) &&
        Objects.equals(this.labels, bucket.labels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, id, name, organizationID, organization, rp, retentionRules, labels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bucket {\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organizationID: ").append(toIndentedString(organizationID)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    rp: ").append(toIndentedString(rp)).append("\n");
    sb.append("    retentionRules: ").append(toIndentedString(retentionRules)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

